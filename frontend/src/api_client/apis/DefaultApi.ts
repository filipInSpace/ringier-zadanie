/* tslint:disable */
/* eslint-disable */
/**
 * Currency Exchange Rate API
 * This API provides services for currency conversion, retrieving current exchange rates.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface ApiRatesCurrencyDateGetRequest {
    currency: string;
    date: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Retrieve exchange rates for a given currency on a specified date from the database or external API if not present in the database.
     * Retrieve exchange rates for a specific currency and date
     */
    async apiRatesCurrencyDateGetRaw(requestParameters: ApiRatesCurrencyDateGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: number; }>> {
        if (requestParameters['currency'] == null) {
            throw new runtime.RequiredError(
                'currency',
                'Required parameter "currency" was null or undefined when calling apiRatesCurrencyDateGet().'
            );
        }

        if (requestParameters['date'] == null) {
            throw new runtime.RequiredError(
                'date',
                'Required parameter "date" was null or undefined when calling apiRatesCurrencyDateGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/rates/{currency}/{date}`.replace(`{${"currency"}}`, encodeURIComponent(String(requestParameters['currency']))).replace(`{${"date"}}`, encodeURIComponent(String(requestParameters['date']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Retrieve exchange rates for a given currency on a specified date from the database or external API if not present in the database.
     * Retrieve exchange rates for a specific currency and date
     */
    async apiRatesCurrencyDateGet(requestParameters: ApiRatesCurrencyDateGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: number; }> {
        const response = await this.apiRatesCurrencyDateGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
